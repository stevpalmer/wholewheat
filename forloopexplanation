//Setup
var contacts = [
    {
        "firstName": "Akira",
        "lastName": "Laine",
        "number": "0543236543",
        "likes": ["Pizza", "Coding", "Brownie Points"]
    },
    {
        "firstName": "Harry",
        "lastName": "Potter",
        "number": "0994372684",
        "likes": ["Hogwarts", "Magic", "Hagrid"]
    },
    {
        "firstName": "Sherlock",
        "lastName": "Holmes",
        "number": "0487345643",
        "likes": ["Intriguing Cases", "Violin"]
    },
    {
        "firstName": "Kristian",
        "lastName": "Vos",
        "number": "unknown",
        "likes": ["JavaScript", "Gaming", "Foxes"]
    }
];


function lookUpProfile(name, prop){
// Only change code below this line
// The following line sets up a way to cycle through every contact in contacts
  for (var x = 0; x < contacts.length; x++) {
      // This following line sets up a way to check whether the name passed through the function is the first name of the contact being checked
      if (name === contacts[x].firstName) {
          // The following line goes a level deeper still to see if the property passed through the function is property of the contact being examined
          if (contacts[x].hasOwnProperty(prop)) {
              // The following line returns the value of the property if the name is the contact's first name and the property sought does exist for the contact
              return contacts[x][prop];
              // The following line provides a catch-all return if the property sough does not exist for the contact
          } else {
              return "No such property";
          }
      }
  }
  // The following line provides a catch-all return if the name sought does not match any of the contacts in the list
  return "No such contact";
// Only change code above this line
}

// Change these values to test your function
lookUpProfile("Akira", "likes");
